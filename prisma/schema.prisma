// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  phone_number     String    @unique
  account_number   String?   @unique
  password         String
  full_name        String
  activation_otp   String?
  image_url        String?
  idcard_url       String?
  utility_bill_url String?
  address          String?
  nin              String?
  bvn              String?
  dateOfBirth      String?
  gender           String?
  disabled         Boolean   @default(false)
  phone_verified   Boolean   @default(false)
  kyc_verified     Boolean   @default(false)
  email_verified   Boolean   @default(false)
  role             Role      @default(USER)
  is_active        Boolean   @default(true)
  kyc              Kyc?
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  account          account[]
}

model account {
  id                Int               @id @default(autoincrement())
  account_number    String            @unique
  account_type      account_type?
  balance           Float             @default(0)
  account_histories account_history[]
  user_id           Int
  user              User              @relation(fields: [user_id], references: [id])
  created_at        DateTime          @default(now()) @db.Timestamp
  updated_at        DateTime          @updatedAt @db.Timestamp
}

model account_history {
  id               Int              @id @default(autoincrement())
  account_id       Int
  account          account          @relation(fields: [account_id], references: [id])
  transaction_type transaction_list
  amount           Float            @default(0)
  type             type
  previous_balance Float
  new_balance      Float
  description      String?
  reference        String
  created_at       DateTime         @default(now()) @db.Timestamp
  updated_at       DateTime         @updatedAt @db.Timestamp
}

model Kyc {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [userId], references: [id])
  userId       Int       @unique
  bvn          String?
  nin          String?
  national_id  String?
  utility_bill String?
  status       KycStatus @default(PENDING)
  submitted_at DateTime  @default(now())
  reviewed_at  DateTime?
}

enum account_type {
  SAVINGS
  CURRENT
}

enum transaction_list {
  TRANSFER
  DEPOSIT
  BILLS
}

enum Role {
  ADMIN
  USER
}

enum KycStatus {
  PENDING
  VERIFIED
  REJECTED
}

enum type {
  DEBIT
  CREDIT
}
